name: Publish Dev Build

on:
  workflow_run:
    workflows: ["Run Tests"]
    types:
      - completed
    branches: [main]
  workflow_dispatch:

jobs:
  build-package:
    runs-on: ubuntu-latest
    # if workflow_run.conclusion is not 'success', the job will not run
    # if it's workflow_dispatch, it will run regardless
    if: ${{  github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success'}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          depth: 0  # for rev-list to work.
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Poetry
        run: pip install poetry

      - name: Calculate Version and Build Number
        run: |
          PROJECT_VERSION=$(poetry version | cut -d ' ' -f2)
          BUILD_NUMBER=$(git rev-list --count HEAD)
          FULL_VERSION="${PROJECT_VERSION}.dev${BUILD_NUMBER}"
          echo "FULL_VERSION=${FULL_VERSION}" >> $GITHUB_ENV
          echo "Calculated version with build number: $FULL_VERSION"
      - name: Update pyproject.toml version
        run: |
          poetry version ${{ env.FULL_VERSION }}

      - name: Build package
        run: poetry build

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: dist/


  # cf https://test.pypi.org/manage/project/haliax/settings/publishing/
  publish-dev:
    runs-on: ubuntu-latest
    needs:
        - build-package
    permissions:
      id-token: write
    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: package
          path: dist/

      - name: Publish release distributions to PyPI Test
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/


